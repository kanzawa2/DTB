* {margin: 0; padding: 0;}

.container {
    margin-top: 20px;
    text-align: center;
}

.timer {
    padding: 10px;
    background: linear-gradient(top, #222, #444);
    overflow: hidden;
    display: inline-block;
    border: 7px solid #efefef;
    border-radius: 5px;
    position: relative;
    background: black;
    box-shadow: 
    inset 0 -2px 10px 1px rgba(0, 0, 0, 0.75), 
    0 5px 20px -10px rgba(0, 0, 0, 1);
}

.cell {
    /*Should only display 1 digit. Hence height = line height of .numbers
      and width = width of .numbers*/
    width: 0.60em;
    height: 32px;
    font-size: 40px;
    overflow: hidden;
    position: relative;
    float: left;
}

.numbers {
    width: 0.6em;
    line-height: 32px;
    font-family: digital, arial, verdana;
    text-align: center;
    color: #fff;
#    position: absolute;
    position: relative;
    top: 0;
    left: 0;
    
    /*Glow to the text*/
    text-shadow: 0 0 5px rgba(255, 255, 255, 1);
}

/*Styles for the controls*/
#timer_controls {
    margin-top: -5px;
}
#timer_controls label {
    cursor: pointer;
    padding: 5px 10px;
    background: #efefef;
    font-family: arial, verdana, tahoma;
    font-size: 11px;
    border-radius: 0 0 3px 3px;
}
input[name="controls"] {display: none;}

/*Control code*/
#stop:checked~.timer .numbers {animation-play-state: paused;}
#start:checked~.timer .numbers {animation-play-state: running;}
#reset:checked~.timer .numbers {animation: none;}

.moveten {
    /*The digits move but dont look good. We will use steps now
      10 digits = 10 steps. You can now see the digits swapping instead of 
      moving pixel-by-pixel*/
    animation: moveten 1s steps(10, end) infinite;
    /*By default animation should be paused*/
    animation-play-state: paused;
}
.movesix {
    animation: movesix 1s steps(6, end) infinite;
    animation-play-state: paused;
}

/*Now we need to sync the animation speed with time speed*/
/*One second per digit. 10 digits. Hence 10s*/
.second {
    animation-duration: 10s;
}
.tensecond {
    animation-duration: 60s;
} /*60 times .second*/

.minute {
    animation-duration: 600s;
} /*60 times .second*/
.tenminute {
    animation-duration: 3600s;
} /*60 times .minute*/

.hour {
    animation-duration: 36000s;
} /*60 times .minute*/
.tenhour {
    animation-duration: 360000s;
} /*10 times .hour*/

@keyframes moveten {
    0% {top: 0;}
    100% {top: -320px;} 
/*height = 40. digits = 10. hence -400 to move it completely to the top*/
}

@keyframes movesix {
    0% {top: 0;}
    100% {top: -192px;} 
/*height = 40. digits = 6. hence -240 to move it completely to the top*/
}

div.task_selecter {
    margin: 20px 0;
    text-align: center;
}

div.button {
    font-size: 60px;
    width: 60px;
    height: 60px;
    border-radius: 30px;
    margin: 10px auto;
    vertical-align: middle;
    background-color: #ddd;
    background-image: -moz-radial-gradient(center 45deg, circle closest-side, #ddd 0%, #aaa 100%);
    background-image: -webkit-gradient(radial, center center, 20,center center 100, from(#888), to(#ddd));
    border:1px solid #444;
    box-shadow: 1px  0px 0px rgba(225,225,225,0.3) inset,
               -1px  0px 0px rgba(225,225,225,0.3) inset,
                0px  1px 1px rgba(0,0,0,0.1) inset,
                0px -1px 1px rgba(0,0,0,0.3) inset,
                0px  1px 3px #666;
}

#time_edition input[type=submit] {
    margin:10px 0;
    width: 60px;
    height: 60px;
    border-radius: 30px;
    text-align:center;
}
#time_edition input[type=submit].start {
    font-size: 60px;
    line-height: 40px;
    vertical-align:middle;
}

#time_edition input[type=submit].stop {
    font-size: 40px;
    line-height: 40px;
    vertical-align:middle;
}

select {
    width: 226px;
}

textarea#bookmark_comment {
    top: 0;
    left: 0;
    
    display:block;
    margin: 10px auto 0 auto;
    min-width: 226px;
}