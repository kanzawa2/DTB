#+TITLE: README
#+DATE: <2014-10-17>
#+AUTHOR: Takuya Okada
* はじめに
   本資料では， 以下について述べる．
   + DTB の開発および実行環境
   + インストール手順
* 開発および実行環境
   現在のDTBの開発(実行)環境は，以下の通りである．
   | Ruby           | 2.1.3 |
   | Rails on Rails | 4.1.6  |
   | Firefox        | 33.0  |
   現在，以下の環境で動作を確認している．
   + MacOSX 10.9(Marvericks)
* インストール手順
  現在のコードは実装途中であるため，リポジトリの状態によっては
  下記のインストール手順では正常に動作しないことが考えられる．
  不明な点があれば岡田(pitipitiunsyumikan@gmail.com)まで連絡して欲しい．
  なお，本手順作成時のDTBのコミットIDは *96110e08ac648afc00697396968177815110a785* である．
  1) rbenv + ruby-build の install(詳細は [[https://github.com/sstephenson/rbenv#basic-github-checkout][https://github.com/sstephenson/rbenv#basic-github-checkout]])
     #+BEGIN_SRC sh
       $ git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
       $ git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
       # Edit your shell dot files to add some path and environment variables.
     #+END_SRC
  2) Ruby と bundler の install
     #+BEGIN_SRC sh
       # Install ruby 2.1.2
       $ rbenv install 2.1.2

       # Installation check
       $ rbenv global 2.1.2
       $ ruby -v # -> You will see: ruby 2.1.2...

       # Install bundler for your new Ruby
       $ gem install bundler

       # Activate bundler
       $ rbenv rehash

       # Get back to your sytem default Ruby if you want
       $ rbenv global system # say, /usr/bin/ruby
       $ ruby -v
     #+END_SRC
  3) DTB の clone
     #+BEGIN_SRC sh
       $ git clone git@github.com:nomlab/DTB.git ~/Programs/DTB
     #+END_SRC
  4) DTB 内での Ruby の default version を設定
     #+BEGIN_SRC sh
       $ cd ~/Programs/DTB
       $ rbenv local 2.1.2
       $ ruby -v # -> You will see: ruby 2.1.2...
     #+END_SRC
  5) 必要な gem を vendor/bundle 以下に install
     #+BEGIN_SRC sh
       $ bundle install --path vendor/bundle
     #+END_SRC
  6) DB を migration
     #+BEGIN_SRC sh
       $ bundle exec rake db:migrate
     #+END_SRC
  7) 履歴情報収集処理の開始
     1) 計算機内部の履歴情報について
        1) 実行権限の書換え(dtraceの利用のため)
           #+BEGIN_SRC sh
             $ sudo visudo
             # replace "%admin  ALL=(ALL) ALL" to "%admin  ALL=(ALL) NOPASSWD: ALL"
           #+END_SRC
        2) スクリプトの実行
           #+BEGIN_SRC sh
             $ bundle exec rails runner lib/file_history_scripts/create_file_histories
           #+END_SRC
     2) 計算機外部の履歴情報について
        1) Firefox の profile に改造版 MindTheTime (MyMindTheTime) のパスを教える
           + hogehoge には適当な文字列が入っている
           + profile_name にはユーザが設定したprofileの名前が入っている(デフォルトであるのは default)
           #+BEGIN_SRC sh
           $ ~/Library/Application\ Support/Firefox/Profiles/hogehoge.profile_name/extensions/jid0-HYNmqxA9zQGfJADREri4n2AHKSI@jetpack&
           #+END_SRC
        2) Firefox の起動と install
           + 以下のコマンドで profile を指定して起動できる．あとは流れにそって install
             #+BEGIN_SRC sh
               $ /Applications/Firefox.app/Contents/MacOS/firefox -ProfileManager
             #+END_SRC
           + MyMindTheTime の Timer を動かす
           + guard で MyMindTheTime が DB を更新するのを監視
             + your_name にはユーザ名を入力
             + hogehoge と profile_name は MyMindTheTime のパスを通した profile に合わせる
             #+BEGIN_SRC sh
             $ bundle exec guard -c --no-interactions --watchdir /Users/your_name/Library/Application\ Support/Firefox/Profiles/hogehoge.profile_name/
             #+END_SRC
  8) Toggl account の設定
     #+BEGIN_SRC sh
       $ mv local/toggl.yml.sample local/toggl.yml
       $ vim local/toggl.yml # -> Input your toggl token
     #+END_SRC
  9) DTB の 起動
     #+BEGIN_SRC sh
       $ bundle exec rails s
     #+END_SRC
