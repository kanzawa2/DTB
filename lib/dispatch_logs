#!/usr/bin/env ruby
require 'io/wait'

class LogDispatcher
  include Enumerable

  def initialize
    @logs = []
    @fot = FileOpenTracker.new
    @fct = FocusChangeTracker.new
  end

  def gets
    @logs[0] = @fot.gets if @fot.ready? && @logs[0] == nil
    @logs[1] = @fct.gets if @fct.ready? && @logs[1] == nil
    if @logs.all?{|log| log != nil}
      oldest_log = @logs.sort.first
      @logs.sort.first = nil
      return oldest_log
    else
      oldest_log = @logs[0] || @logs[1]
      @logs[0], @logs[1] = nil, nil
      return oldest_log
    end
  end

  def ready?
    @fot.ready? || @fct.ready?
  end

  def each
    @logs.each do |log|
      yield log
    end
  end
end

class LogTracker
  def initialize(cmd)
    @io = IO.popen(cmd)
  end

  def gets(log_class)
    log_class.new(@io.read)
  end

  def ready?
    @io.ready?
  end
end

class FileOpenTracker < LogTracker
  def initialize
    #super("sudo #{Rails.root}/lib/track_file_open")
    super("sudo ./track_file_open")
  end

  def gets
    super(FileOpenLog)
  end
end

class FocusChangeTracker < LogTracker
  def initialize
    #super("#{Rails.root}/lib/track_focus_change")
    super("./track_focus_change")
  end

  def gets
    super(FocusChangeLog)
  end
end

class Log
  include Comparable
  attr_reader :time, :log_type, :pid, :pname

  def <=>(other)
    self.time <=> other.time
  end

  def equal_process?(other)
    self.pid == other.pid && self.pname == other.pname
  end
end

class FileOpenLog < Log
  attr_reader :path

  def initialize(line)
    principle_log = line.split("|")
    @time = Time.at(principle_log[0])
    @log_type = principle_log[1]
    @pid = principle_log[2]
    @pname = principle_log[3]
    @path = principle_log[4]
  end
end

class FocusChangeLog < Log
  def initialize(line)
    principle_log = line.split("|")
    @time = Time.at(principle_log[0])
    @log_type = principle_log[1]
    @pid = principle_log[2]
    @pname = principle_log[3]
  end
end

################################
# main
ld = LogDispatcher.new
while 1 do
  log = ld.gets if ld.ready?
  puts "#{log.time}|#{log.log_type}|#{log.pid}|#{log.pname}"
end
